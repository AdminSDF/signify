rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Admin check based on email in the auth token.
    function isAuthUserAdmin() {
        return isAuthenticated() && request.auth.token.email == "jameafaizanrasool@gmail.com";
    }

    // --- Collections ---
    match /users/{userId} {
      allow get: if isOwner(userId) || isAuthUserAdmin();
      allow list: if isAuthUserAdmin();

      allow create: if isOwner(userId) &&
        request.resource.data.uid == userId &&
        request.resource.data.email == request.auth.token.email &&
        request.resource.data.createdAt == request.time &&
        request.resource.data.balance is number &&
        request.resource.data.spinsAvailable is number &&
        request.resource.data.dailyPaidSpinsUsed == 0 &&
        request.resource.data.totalWinnings == 0 &&
        request.resource.data.totalSpinsPlayed == 0;
        
      allow update: if (isOwner(userId) &&
        request.resource.data.uid == resource.data.uid && // Prevent changing immutable fields
        request.resource.data.email == resource.data.email &&
        request.resource.data.createdAt == resource.data.createdAt &&
        request.resource.data.isAdmin == resource.data.isAdmin
      ) || isAuthUserAdmin();

      allow delete: if isAuthUserAdmin();
    }

    match /transactions/{transactionId} {
      allow get: if isAuthenticated() && (resource.data.userId == request.auth.uid || isAuthUserAdmin());
      // Users can only list their own transactions. Admins can list any if they construct the query.
      allow list: if (isAuthenticated() && request.query.where.userId == request.auth.uid) || isAuthUserAdmin();

      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      
      allow update, delete: if isAuthUserAdmin();
    }

    match /withdrawalRequests/{requestId} {
      allow get: if isAuthenticated() && (resource.data.userId == request.auth.uid || isAuthUserAdmin());
      allow list: if isAuthUserAdmin(); // Only admin can list all withdrawal requests.
      
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthUserAdmin();
    }

    match /addFundRequests/{requestId} {
      allow get: if isAuthenticated() && (resource.data.userId == request.auth.uid || isAuthUserAdmin());
      allow list: if isAuthUserAdmin(); // Only admin can list all add fund requests.

      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthUserAdmin();
    }

    match /appConfiguration/{docId} {
      allow read: if true;
      allow write: if isAuthUserAdmin();
    }
  }
}
