
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/users/$(userId)) &&
             get(/databases/$(database)/documents/users/$(userId)).data.isAdmin == true;
    }

    // Users Collection
    match /users/{userId} {
      // Allow user to read/update their own document.
      // Admins can read any user document.
      allow read, update: if request.auth != null && (request.auth.uid == userId || isAdmin(request.auth.uid));
      
      // Allow anyone to create their own user document during sign-up.
      allow create: if request.auth != null && request.auth.uid == userId;
    }

    // Transactions Collection
    match /transactions/{transactionId} {
      // Allow user to read their own transactions, and admins to read any.
      allow read: if request.auth != null && (resource.data.userId == request.auth.uid || isAdmin(request.auth.uid));
      
      // Allow user to create their own transactions.
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    // WithdrawalRequests Collection
    match /withdrawalRequests/{requestId} {
      // Allow users to create their own requests.
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      // Allow admin to read/write all requests. Users can't read them after creation.
      allow read, write: if request.auth != null && isAdmin(request.auth.uid);
    }
    
    // AddFundRequests Collection
    match /addFundRequests/{requestId} {
      // Allow users to create their own requests.
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      // Allow admin to read/write all requests.
      allow read, write: if request.auth != null && isAdmin(request.auth.uid);
    }

    // App Configuration
    match /appConfiguration/{docId} {
      // Allow any authenticated user to read the configuration.
      allow read: if request.auth != null;
      // Allow only admins to write to the configuration.
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }
  }
}
