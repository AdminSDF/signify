
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/users/$(userId)) &&
             get(/databases/$(database)/documents/users/$(userId)).data.isAdmin == true;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can create their own user document
      allow create: if request.auth != null && request.auth.uid == userId;

      // A user can only read or update their own document
      // An admin can read any user document
      allow read, update: if request.auth != null && (request.auth.uid == userId || isAdmin(request.auth.uid));

      // Admin can list all users
      allow list: if request.auth != null && isAdmin(request.auth.uid);
    }

    // Rules for 'transactions' collection
    match /transactions/{transactionId} {
      // A user can create their own transactions
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;

      // A user can read their own transactions
      // An admin can read any transaction
      allow read: if request.auth != null && (get(/databases/$(database)/documents/$(request.resource.path)).data.userId == request.auth.uid || isAdmin(request.auth.uid));

      // An admin can list all transactions
      allow list: if request.auth != null && isAdmin(request.auth.uid);
    }

    // Rules for 'withdrawalRequests' and 'addFundRequests'
    match /{requestCollection}/{requestId}
      where requestCollection in ['withdrawalRequests', 'addFundRequests'] {

      // A user can create their own requests
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;

      // An admin can read, list, and update any request
      allow read, list, update: if request.auth != null && isAdmin(request.auth.uid);
    }

    // Rules for 'appConfiguration'
    match /appConfiguration/{docId} {
      // Any authenticated user can read the configuration
      allow read: if request.auth != null;
      // Only an admin can write/update the configuration
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }
  }
}
    