
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    // Checks if a user has a specific role or higher.
    function hasRole(role) {
      // Ensure the user document exists before trying to access its data.
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    function isSuperAdmin() {
      return hasRole('super-admin');
    }

    function isAdmin() {
      // An Admin or Super Admin has admin privileges.
      return hasRole('admin') || isSuperAdmin();
    }

    function isFinanceStaff() {
      // Finance Staff, Admins, or Super Admins have finance privileges.
      return hasRole('finance-staff') || isAdmin();
    }

    function isSupportStaff() {
      // Support Staff, Admins, or Super Admins have support privileges.
      return hasRole('support-staff') || isAdmin();
    }
    
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // --- Collection Rules ---

    // USERS Collection
    // Users can create their own profile, update their own profile, and read their own profile.
    // Admins can read any user profile and list all users.
    // Finance staff can update any user profile (for balance changes during approvals).
    match /users/{userId} {
      allow create: if isSignedIn() && isOwner(userId);
      allow get: if isSignedIn() && (isOwner(userId) || isAdmin());
      allow list: if isSignedIn() && isAdmin();
      allow update: if isSignedIn() && (isOwner(userId) || isFinanceStaff());

      // User sub-collections (notifications, etc.)
      match /{subcollection}/{docId} {
        allow read, write: if isOwner(userId);
      }
    }

    // Requests (Add Fund & Withdrawals)
    // A user can create their own request.
    // The owner or finance staff can read a specific request.
    // Only finance staff can list and update requests (for approval/rejection).
    match /{collectionName}/{requestId} where collectionName in ['withdrawalRequests', 'addFundRequests'] {
      allow create: if isSignedIn() && isOwner(request.resource.data.userId);
      allow get: if isSignedIn() && (isOwner(resource.data.userId) || isFinanceStaff());
      allow list, update: if isSignedIn() && isFinanceStaff();
    }

    // TRANSACTIONS Collection
    // Transactions are created by server actions triggered by staff.
    // A user can read their own transactions. Finance staff can read any and list all.
    match /transactions/{transactionId} {
      allow create: if isSignedIn() && isFinanceStaff();
      allow get: if isSignedIn() && (isOwner(resource.data.userId) || isFinanceStaff());
      allow list: if isSignedIn() && isFinanceStaff();
    }

    // SUPPORT TICKETS Collection
    // A user creates their own ticket.
    // The owner or support staff can read and update a ticket.
    // Only support staff can list all tickets.
    match /supportTickets/{ticketId} {
      allow create: if isSignedIn() && isOwner(request.resource.data.userId);
      allow get, update: if isSignedIn() && (isOwner(resource.data.userId) || isSupportStaff());
      allow list: if isSignedIn() && isSupportStaff();
    }

    // TOURNAMENTS Collection
    // Any signed-in user can view tournaments.
    // Only admins can manage tournaments.
    match /tournaments/{tournamentId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn() && isAdmin();
      
      // Participants sub-collection for tournaments
      // A user can join (create their own participant doc).
      // Anyone can read participant data for leaderboards.
      // Only admins can update participant scores (when ending a tournament).
      match /participants/{participantId} {
        allow create: if isSignedIn() && isOwner(participantId);
        allow read: if true;
        allow update: if isSignedIn() && isAdmin();
      }
    }
    
    // APP CONFIGURATION Collection
    // Anyone can read the app configuration.
    // Only Super Admins can write/update it.
    match /appConfiguration/{docId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    // SYSTEM STATS Collection
    // Only Admins can read or write global system stats.
    match /systemStats/{docId} {
      allow read, write: if isSignedIn() && isAdmin();
    }
    
    // USER REWARDS Collection
    // A user can create and manage their own reward document.
    match /userRewards/{userId} {
      allow read, create, update: if isSignedIn() && isOwner(userId);
    }
    
    // ACTIVITY LOGS Collection
    // Any signed-in user can create a log entry for themselves.
    match /activityLogs/{logId} {
      allow create: if isSignedIn();
    }
    
    // FRAUD ALERTS Collection
    // Only Admins can manage fraud alerts.
    match /fraudAlerts/{alertId} {
      allow read, write: if isSignedIn() && isAdmin();
    }
  }
}
