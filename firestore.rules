
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    // These functions check the role of the user making the request.
    // They work by reading the user's own document.
    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'super-admin';
    }
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super-admin'];
    }
    function isFinanceStaff() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['finance-staff', 'admin', 'super-admin'];
    }
    function isSupportStaff() {
       return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['support-staff', 'admin', 'super-admin'];
    }
    function isSignedIn() {
      return request.auth != null;
    }

    // By default, nobody can read or write anything.
    match /{document=**} {
      allow read, write: if false;
    }

    // --- Collection Rules ---

    // USERS
    match /users/{userId} {
      // ANY signed-in user can get another user's profile (for things like friend lists).
      // A user can always update their own document.
      // Staff roles (admin, finance, support) can update any user document, as server actions will handle the logic.
      allow get: if isSignedIn();
      allow list: if isAdmin(); // Only admins can list ALL users for the main user table.
      allow update: if request.auth.uid == userId || isSupportStaff(); // isSupportStaff is the most inclusive role for all types of admin updates.
      // Anyone can create their own user document during sign-up.
      allow create: if request.auth.uid == userId;
    }

    // APP CONFIGURATION
    match /appConfiguration/{docId} {
      // Anyone can read the app configuration.
      allow get: if true;
      // Only super-admins can change the app configuration.
      allow write: if isSuperAdmin();
    }
    
    // SYSTEM STATS
    match /systemStats/{docId} {
        // Only admins and finance staff can read or write global stats.
        allow read, write: if isFinanceStaff();
    }

    // FINANCE (Deposits & Withdrawals)
    match /addFundRequests/{reqId} {
        // A user can see their own request. Finance staff can see any request.
        allow get: if isFinanceStaff() || request.auth.uid == resource.data.userId;
        // Finance staff can list all requests.
        allow list: if isFinanceStaff();
        // A user can create their own request.
        allow create: if request.auth.uid == request.resource.data.userId;
        // Finance staff can update requests (e.g., to approve/reject).
        allow update: if isFinanceStaff();
    }
    match /withdrawalRequests/{reqId} {
        allow get: if isFinanceStaff() || request.auth.uid == resource.data.userId;
        allow list: if isFinanceStaff();
        allow create: if request.auth.uid == request.resource.data.userId;
        allow update: if isFinanceStaff();
    }

    // TRANSACTIONS
    match /transactions/{txId} {
        // A user can see their own transactions. Finance staff can see any transaction.
        allow get: if isFinanceStaff() || request.auth.uid == resource.data.userId;
        // Finance staff can list all transactions.
        allow list: if isFinanceStaff();
        // A user can create their own transaction (e.g., spin). Finance staff can create referral bonus transactions.
        allow create: if request.auth.uid == request.resource.data.userId || isFinanceStaff();
    }

    // SUPPORT TICKETS
    match /supportTickets/{ticketId} {
        // A user can access their own ticket. Support staff can access any ticket.
        allow get, update: if isSupportStaff() || request.auth.uid == resource.data.userId;
        // Support staff can list all tickets.
        allow list: if isSupportStaff();
        // A user can create their own ticket.
        allow create: if request.auth.uid == request.resource.data.userId;
    }
    
    // TOURNAMENTS
    match /tournaments/{tourneyId} {
        // Anyone can see tournaments.
        allow get, list: if isSignedIn();
        // Admins can create/update tournaments.
        allow create, update: if isAdmin();

        // Participants subcollection
        match /participants/{userId} {
            // Anyone can see who is participating.
            allow get, list: if isSignedIn();
            // A user can join (create their own participant doc).
            allow create: if request.auth.uid == userId;
            // Only the server/admin can update scores.
            allow update: if isAdmin();
        }
    }

    // NOTIFICATIONS & USER REWARDS (Subcollections)
    match /users/{userId}/{subcollection}/{docId} {
        // A user can only access their own notifications and reward data.
        allow read, write: if request.auth.uid == userId;
    }

    // ACTIVITY LOGS
    match /activityLogs/{logId} {
        // Only admins can read logs. The server handles creating them.
        allow read, list: if isAdmin();
        // The `logUserActivity` function is trusted to create logs.
        allow create: if isSignedIn();
    }

    // FRAUD ALERTS
    match /fraudAlerts/{alertId} {
        // Only admins can read/write fraud alerts.
        allow read, write, list: if isAdmin();
    }
  }
}
