
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if a user is an admin
    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/users/$(userId)) &&
             get(/databases/$(database)/documents/users/$(userId)).data.isAdmin == true;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can read, write, and delete any user document
      allow read, write, delete: if request.auth != null && isAdmin(request.auth.uid);
      
      // A logged-in user can read their own document
      allow read: if request.auth != null && request.auth.uid == userId;

      // A logged-in user can update their own document, but cannot make themselves an admin or change critical fields
      allow update: if request.auth != null && request.auth.uid == userId &&
                       !('isAdmin' in request.resource.data) &&
                       !('balance' in request.resource.data) && // Users can't change their own balance directly
                       !('totalWinnings' in request.resource.data);
      
      // Users can't create their own document directly (it's done via a server-side function/backend)
      allow create: if false;
    }

    // Rules for the 'transactions' collection
    match /transactions/{transactionId} {
      // Admins can read and list all transactions
      allow read, list: if request.auth != null && isAdmin(request.auth.uid);

      // A user can read their own transactions
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;

      // Transactions are created by the server/trusted code, not directly by users
      allow create, update, delete: if false;
    }

    // Rules for the 'withdrawalRequests' collection
    match /withdrawalRequests/{requestId} {
      // Admins can read, list, create, update, and delete all withdrawal requests
      allow read, list, create, update, delete: if request.auth != null && isAdmin(request.auth.uid);
      
      // A user can create their own withdrawal request
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      
      // A user can read their own withdrawal requests
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      
      // Users cannot update or delete requests once created
      allow update, delete: if false;
    }
    
    // Rules for the 'addFundRequests' collection
    match /addFundRequests/{requestId} {
       // Admins can read, list, create, update, and delete all add fund requests
      allow read, list, create, update, delete: if request.auth != null && isAdmin(request.auth.uid);

      // A user can create their own add fund request
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;

      // A user can read their own add fund requests
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;

      // Users cannot update or delete requests once created
      allow update, delete: if false;
    }
    
    // Rules for the 'appConfiguration' collection
    match /appConfiguration/{configId} {
      // Anyone can read the app configuration (for settings, news, etc.)
      allow read: if true;
      
      // Only admins can write/update the app configuration
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }
  }
}
