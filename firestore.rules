
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    function isAdmin() {
      // Robust check: ensures user document exists and isAdmin field is explicitly true.
      return request.auth != null &&
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // --- Collection-Specific Rules ---

    match /users/{userId} {
      // Any authenticated user can read user profiles (for leaderboard, etc.).
      allow read: if request.auth != null;
      // An admin can update any user. A user can only update their own profile.
      allow update: if isAdmin() || isOwner(userId);
      // A user can only create their own profile.
      allow create: if isOwner(userId);
      // No one can delete users from the client for security.
      allow delete: if false;
    }

    match /transactions/{transactionId} {
      // An admin can read any transaction. A user can read their own.
      // This works for get() and list() with a 'where' clause.
      allow read: if isAdmin() || isOwner(resource.data.userId);
      // An admin can write to any transaction (e.g., for corrections).
      allow write: if isAdmin();
      // A user can create their own transactions.
      allow create: if isOwner(request.resource.data.userId);
    }

    match /withdrawalRequests/{requestId} {
      // Only an admin can read or write these requests.
      allow read, write: if isAdmin();
      // A user can only create a request for themselves.
      allow create: if isOwner(request.resource.data.userId);
    }
    
    match /addFundRequests/{requestId} {
      // Only an admin can read or write these requests.
      allow read, write: if isAdmin();
      // A user can only create a request for themselves.
      allow create: if isOwner(request.resource.data.userId);
    }

    match /appConfiguration/{docId} {
      // ANYONE can read the configuration, even unauthenticated users.
      // This is needed for the app to load its settings on startup.
      allow read: if true;
      // ONLY admins can write to the configuration.
      allow write: if isAdmin();
    }
  }
}
