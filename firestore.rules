
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function getUserRole() {
      // Use get() to read user's role from their own document.
      // This is crucial for role-based access control.
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }
    
    function isSuperAdmin() {
      return isAuthenticated() && getUserRole() == 'super-admin';
    }

    function isAdmin() {
      return isAuthenticated() && getUserRole() in ['admin', 'super-admin'];
    }
    
    function isFinanceStaff() {
      return isAuthenticated() && getUserRole() in ['admin', 'super-admin', 'finance-staff'];
    }

    function isSupportStaff() {
      return isAuthenticated() && getUserRole() in ['admin', 'super-admin', 'support-staff'];
    }

    // --- Collections Rules ---

    // USER COLLECTION
    // Anyone can read basic profile info (for leaderboards, etc.).
    // Users can create their own document on signup.
    // Users can update their own non-critical fields. Admins can update anything.
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isOwner(userId);
      // Users can update their own profiles, but cannot change protected fields like balance, role, etc.
      // Admins have full write access to user documents.
      allow update: if (isOwner(userId) && !('balances' in request.resource.data || 'spinsAvailable' in request.resource.data || 'role' in request.resource.data || 'totalWinnings' in request.resource.data || 'isBlocked' in request.resource.data)) || isAdmin();
      
      // NOTIFICATIONS SUBCOLLECTION
      // Only the user can access their own notifications.
      match /notifications/{notificationId} {
        allow read, write: if isOwner(userId);
      }
    }

    // APP CONFIGURATION
    // Anyone can read app settings, but only Super Admins can change them.
    match /appConfiguration/main {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    // SYSTEM STATISTICS
    // Admins need to be able to read and write this for the overview dashboard.
    match /systemStats/global {
      allow read, write: if isAdmin();
    }

    // TRANSACTIONS
    // Users can read their own transactions. Admins can read all.
    // Transactions are immutable and created by server actions (triggered by an admin).
    match /transactions/{transactionId} {
      allow list: if isAdmin();
      allow get: if isAdmin() || (isAuthenticated() && resource.data.userId == request.auth.uid);
      allow create: if isAdmin();
      allow update, delete: if false;
    }

    // ADD FUND & WITHDRAWAL REQUESTS
    // Users can create their own requests.
    // Finance staff (and above) can list and update all requests.
    match /addFundRequests/{requestId} {
      allow get: if isFinanceStaff() || (isAuthenticated() && resource.data.userId == request.auth.uid);
      allow list: if isFinanceStaff();
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isFinanceStaff();
    }
    
    match /withdrawalRequests/{requestId} {
      allow get: if isFinanceStaff() || (isAuthenticated() && resource.data.userId == request.auth.uid);
      allow list: if isFinanceStaff();
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isFinanceStaff();
    }
    
    // SUPPORT TICKETS
    // Users can create/update their own tickets.
    // Support staff can list and update all tickets.
    match /supportTickets/{ticketId} {
        allow get: if isSupportStaff() || (isAuthenticated() && resource.data.userId == request.auth.uid);
        allow list: if isSupportStaff();
        allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
        // A user can update their own ticket (to add a message), or support staff can update any ticket.
        allow update: if isSupportStaff() || (isAuthenticated() && resource.data.userId == request.auth.uid);
    }
    
    // TOURNAMENTS
    // Anyone can read tournament info. Admins manage them.
    // Users can create their own participant document when they join.
    match /tournaments/{tournamentId} {
        allow read: if true;
        allow create, update: if isAdmin();
        
        match /participants/{userId} {
            allow read: if true;
            // A user can create their own participant document.
            allow create: if isOwner(userId);
            // Only admins can update scores or distribute prizes.
            allow update: if isAdmin();
        }
    }
    
    // MISC COLLECTIONS
    // These are mostly written by server actions and read by admins.
    match /activityLogs/{logId} {
      allow read: if isAdmin();
      allow create: if isAuthenticated();
    }
    
    match /fraudAlerts/{alertId} {
      allow read, write: if isAdmin();
    }
    
    match /userRewards/{userId} {
      // User can read and write their own reward document (for claiming daily rewards).
      allow read, write: if isOwner(userId);
    }
  }
}
