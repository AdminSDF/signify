
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    // Safely checks if the request is from an authenticated user and if their UID matches the given userId.
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Safely gets the role of the currently authenticated user. Returns 'none' if not authenticated.
    function getRole() {
      if (request.auth == null) {
        return 'none';
      }
      // Use .get() to safely access the 'role' field, providing a default value if it doesn't exist.
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('role', 'player');
    }

    // Safely checks for the legacy 'isAdmin' flag to support older admin accounts.
    function isLegacyAdmin() {
       if (request.auth == null) {
        return false;
      }
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('isAdmin', false) == true;
    }

    // --- Role-Based Permission Functions ---
    function isSuperAdmin() {
      return getRole() == 'super-admin' || isLegacyAdmin();
    }
    
    function isAdmin() {
      return isSuperAdmin() || getRole() == 'admin';
    }

    function isFinanceStaff() {
      return isAdmin() || getRole() == 'finance-staff';
    }

    function isSupportStaff() {
      return isAdmin() || getRole() == 'support-staff';
    }

    // --- Collection Rules ---

    // USERS collection
    match /users/{userId} {
      // A user can create their own document during signup.
      allow create: if isOwner(userId);

      // A user can read or update their own data. Admins can read or update any user's data.
      allow read, update: if isOwner(userId) || isAdmin();

      // Only admins can see the full list of all users.
      allow list: if isAdmin();
      
      // NOTIFICATIONS subcollection within a user document.
      match /notifications/{notificationId} {
        allow read, list, update: if isOwner(userId);
        // Server (acting as admin) can create notifications.
        allow create: if isAdmin();
      }
    }
    
    // USER REWARDS collection
    match /userRewards/{userId} {
       // A user can create their own rewards document during signup.
       allow create: if isOwner(userId);
       // A user can read and update their own reward data (e.g., claiming rewards).
       allow read, update: if isOwner(userId);
    }
    
    // APP CONFIGURATION
    match /appConfiguration/{docId} {
      // Any authenticated user can read the app configuration.
      allow read: if request.auth != null;
      // Only super admins can change the configuration.
      allow write: if isSuperAdmin();
    }

    // --- Finance Collections ---
    match /addFundRequests/{requestId} {
      // A user can create their own fund request.
      allow create: if isOwner(request.resource.data.userId);
      // A user can read their own request. Finance staff can read any request.
      allow read: if isOwner(get(/databases/$(database)/documents/addFundRequests/$(requestId)).data.userId) || isFinanceStaff();
      // Finance staff can list all requests and update them (approve/reject).
      allow list, update: if isFinanceStaff();
    }

    match /withdrawalRequests/{requestId} {
      allow create: if isOwner(request.resource.data.userId);
      allow read: if isOwner(get(/databases/$(database)/documents/withdrawalRequests/$(requestId)).data.userId) || isFinanceStaff();
      allow list, update: if isFinanceStaff();
    }
    
    match /transactions/{transactionId} {
      // Server (acting as finance staff/admin) creates transactions during approvals.
      allow create: if isFinanceStaff();
      // User can read their own transactions. Finance staff can read any.
      allow read: if isOwner(get(/databases/$(database)/documents/transactions/$(transactionId)).data.userId) || isFinanceStaff();
      // Finance staff can list all transactions.
      allow list: if isFinanceStaff();
    }
    
    // SYSTEM STATS
    match /systemStats/{docId} {
      // Admins read stats. Finance staff write to them during approvals.
      allow read: if isAdmin();
      allow create, update, write: if isFinanceStaff();
    }

    // SUPPORT TICKETS
    match /supportTickets/{ticketId} {
      allow create: if isOwner(request.resource.data.userId);
      allow read, update: if isOwner(get(/databases/$(database)/documents/supportTickets/$(ticketId)).data.userId) || isSupportStaff();
      allow list: if isSupportStaff();
    }
    
    // TOURNAMENTS
    match /tournaments/{tournamentId} {
      allow read, list: if request.auth != null;
      allow create, update: if isAdmin();
      
      match /participants/{userId} {
        allow read, list: if request.auth != null;
        allow create: if isOwner(userId);
        allow update: if isAdmin();
      }
    }
    
    // LOGGING (write-only for authenticated clients)
    match /activityLogs/{logId} {
      allow create: if request.auth != null;
    }
    
    match /fraudAlerts/{alertId} {
      // Server can create alerts, admins can read them.
      allow create: if request.auth != null; 
      allow read, list: if isAdmin();
    }
  }
}
