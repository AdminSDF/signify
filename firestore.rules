rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return request.auth != null && exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // -- Users Collection Rules --
    match /users/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow get: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow list: if request.auth != null;
      allow update: if request.auth != null && (request.auth.uid == userId || isAdmin());
    }

    // -- Transactions Collection Rules --
    match /transactions/{transactionId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow get: if request.auth != null && (resource.data.userId == request.auth.uid || isAdmin());
      allow list: if isAdmin();
    }

    // -- Withdrawal Request Rules --
    match /withdrawalRequests/{requestId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read, write, delete: if isAdmin();
    }
    
    // -- Add Fund Request Rules --
    match /addFundRequests/{requestId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read, write, delete: if isAdmin();
    }

    // -- App Configuration Rules --
    match /appConfiguration/{docId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
  }
}
