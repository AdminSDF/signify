
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // =================================
    //       HELPER FUNCTIONS
    // =================================
    function isSuperAdmin() {
      return getUserData(request.auth.uid).role == 'super-admin';
    }
    
    function isAdmin() {
      let userRole = getUserData(request.auth.uid).role;
      return userRole == 'admin' || userRole == 'super-admin';
    }

    function isFinanceStaff() {
      let userRole = getUserData(request.auth.uid).role;
      return userRole == 'finance-staff' || isAdmin();
    }

    function isSupportStaff() {
      let userRole = getUserData(request.auth.uid).role;
      return userRole == 'support-staff' || isAdmin();
    }
    
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }
    
    function isCreatingOwnDoc(userId) {
        return isOwner(userId) && !exists(/databases/$(database)/documents/users/$(userId));
    }

    // =================================
    //       COLLECTION RULES
    // =================================

    // Collection: users
    match /users/{userId} {
      allow read: if isSignedIn();
      // CRITICAL FIX: Add 'list' permission for admins
      allow list: if isAdmin();
      allow create: if isCreatingOwnDoc(userId); // Users can create their own doc during signup
      allow update: if isOwner(userId) || isSuperAdmin(); // Owner or Super Admin can update
    }
    
    // Sub-collection: notifications
    match /users/{userId}/notifications/{notificationId} {
      allow read, write: if isOwner(userId);
    }
    
    // Collection: appConfiguration
    match /appConfiguration/{docId} {
      allow read: if true; // Anyone can read app settings
      allow write: if isSuperAdmin(); // Only super admins can write
    }

    // Collection: systemStats
    match /systemStats/{docId} {
      allow read: if isFinanceStaff();
      // Server actions (unauthenticated) or Finance Staff can write stats
      allow write: if request.auth == null || isFinanceStaff();
    }
    
    // Collection: transactions
    match /transactions/{transactionId} {
      allow read: if isOwner(get(/databases/$(database)/documents/transactions/$(transactionId)).data.userId) || isFinanceStaff();
      allow list: if isFinanceStaff();
      allow create: if request.auth == null; // Only server can create transactions
    }

    // Collection: addFundRequests
    match /addFundRequests/{requestId} {
      allow read: if isOwner(get(/databases/$(database)/documents/addFundRequests/$(requestId)).data.userId) || isFinanceStaff();
      allow list: if isFinanceStaff();
      allow create: if isSignedIn(); // Users can create their own requests
      allow update: if isFinanceStaff() || request.auth == null; // Admins/server can update status
    }

    // Collection: withdrawalRequests
    match /withdrawalRequests/{requestId} {
      allow read: if isOwner(get(/databases/$(database)/documents/withdrawalRequests/$(requestId)).data.userId) || isFinanceStaff();
      allow list: if isFinanceStaff();
      allow create: if isSignedIn(); // Users can create their own requests
      allow update: if isFinanceStaff() || request.auth == null; // Admins/server can update status
    }
    
    // Collection: supportTickets
    match /supportTickets/{ticketId} {
      function isTicketOwner() {
        return request.auth.uid == resource.data.userId;
      }
      allow read: if isTicketOwner() || isSupportStaff();
      allow list: if isSupportStaff();
      allow create: if isSignedIn(); // Users create their own tickets
      allow update: if isTicketOwner() || isSupportStaff() || request.auth == null;
    }
    
    // Collection: activityLogs
    match /activityLogs/{logId} {
      allow read: if isAdmin();
      allow create: if request.auth == null; // Only server can log
    }
    
    // Collection: fraudAlerts
    match /fraudAlerts/{alertId} {
      allow read, list: if isAdmin();
      allow create: if request.auth == null; // Only server can create alerts
    }
    
    // Collection: tournaments and sub-collections
    match /tournaments/{tournamentId} {
      allow read, list: if true; // Anyone can read/list tournament info
      allow create, update: if isSuperAdmin(); // Only super admins can manage tournaments
      
      match /participants/{participantId} {
        allow read: if true;
        // Only server (during join action) can create/update participant scores
        allow write: if request.auth == null;
      }
    }
    
     // Collection: userRewards
     match /userRewards/{userId} {
      allow read, write: if isOwner(userId);
    }
  }
}
