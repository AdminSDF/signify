rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow update: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId);
    }

    match /transactions/{transactionId} {
      // User can get their own doc, Admin can get any
      allow get: if isAdmin() || isOwner(resource.data.userId);
      // Admin can list all. User can list their own (with a client-side 'where' clause)
      allow list: if isAdmin() || (request.auth != null && request.query.resource.data.userId == request.auth.uid);
      // User can create their own transaction
      allow create: if isOwner(request.resource.data.userId);
    }

    match /withdrawalRequests/{requestId} {
      allow get, list, update, delete: if isAdmin();
      allow create: if isOwner(request.resource.data.userId);
    }

    match /addFundRequests/{requestId} {
      allow get, list, update, delete: if isAdmin();
      allow create: if isOwner(request.resource.data.userId);
    }

    match /appConfiguration/{docId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    match /testAdminOnly/{docId} {
      allow read: if isAdmin();
    }
  }
}
