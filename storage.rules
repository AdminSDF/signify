rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {

    // Helper function to check if the user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check ownership
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Helper function to check if the user is an admin
    function isAdmin() {
      return isAuthenticated() &&
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Profile Photos: /profile_photos/{userId}
    match /profile_photos/{userId} {
      // Any authenticated user can read profile photos (for leaderboards, etc.)
      allow read: if isAuthenticated();

      // Only the owner of the profile can upload or update their photo.
      // The file must be an image and under 2MB.
      allow write: if isOwner(userId) &&
                      request.resource.size < 2 * 1024 * 1024 &&
                      request.resource.contentType.matches('image/.*');
    }

    // Support Tickets: /support_tickets/{ticketId}/{fileName}
    match /support_tickets/{ticketId}/{fileName} {
      // Only admins can read the screenshots submitted by users.
      allow read: if isAdmin();
      
      // A user can only upload a screenshot for a ticket they created.
      // The file must be an image and under 5MB.
      function isTicketOwner() {
        let ticket = get(/databases/$(database)/documents/supportTickets/$(ticketId));
        return isOwner(ticket.data.userId);
      }
      
      allow create: if isTicketOwner() &&
                       request.resource.size < 5 * 1024 * 1024 &&
                       request.resource.contentType.matches('image/.*');
    }

  }
}
